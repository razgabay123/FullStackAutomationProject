{"uid":"2b4c52e6983676c9","name":"Test02: Complex calculation","fullName":"test_cases.test_desktop.Test_Desktop#test_02_calculate_complex","historyId":"d80b1a99cb06260a02363e433beaab81","time":{"start":1744883444009,"stop":1744883444009,"duration":0},"description":"This test verifies the result of a more complex calculation","descriptionHtml":"<p>This test verifies the result of a more complex calculation</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: <html>\n<head>\n   <title>Status page</title>\n</head>\n<body style=\"font-family: sans-serif;\">\n<p style=\"font-size: 1.2em;font-weight: bold;margin: 1em 0px;\">Not Found</p>\n<p>The server has not found anything matching the request URI</p>\n<p>You can get technical details <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.5\">here</a>.<br>\nPlease continue your visit at our <a href=\"/\">home page</a>.\n</p>\n</body>\n</html>","statusTrace":"request = <SubRequest 'init_desktop_driver' for <Function test_01_calculate_simple_sum>>\n\n    @pytest.fixture(scope=\"class\")\n    def init_desktop_driver(request):\n>   \tedriver = get_desktop_driver()\n\ntest_cases\\conftest.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_cases\\conftest.py:135: in get_desktop_driver\n    driver = appium.webdriver.Remote(get_data('WinAppDriver_Service'), dc)\n.venv\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:267: in __init__\n    super().__init__(\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:157: in __init__\n    self.start_session(capabilities, browser_profile)\n.venv\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:357: in start_session\n    response = self.execute(RemoteCommand.NEW_SESSION, parameters)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C03A283A70>\nresponse = {'status': 404, 'value': '<html>\\n<head>\\n   <title>Status page</title>\\n</head>\\n<body style=\"font-family: sans-serif...html#sec10.4.5\">here</a>.<br>\\nPlease continue your visit at our <a href=\"/\">home page</a>.\\n</p>\\n</body>\\n</html>\\n'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n>           raise exception_class(value)\nE           selenium.common.exceptions.WebDriverException: Message: <html>\nE           <head>\nE              <title>Status page</title>\nE           </head>\nE           <body style=\"font-family: sans-serif;\">\nE           <p style=\"font-size: 1.2em;font-weight: bold;margin: 1em 0px;\">Not Found</p>\nE           <p>The server has not found anything matching the request URI</p>\nE           <p>You can get technical details <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.5\">here</a>.<br>\nE           Please continue your visit at our <a href=\"/\">home page</a>.\nE           </p>\nE           </body>\nE           </html>\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:208: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"init_desktop_driver","time":{"start":1744883443821,"stop":1744883443863,"duration":42},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: <html>\n<head>\n   <title>Status page</title>\n</head>\n<body style=\"font-family: sans-serif;\">\n<p style=\"font-size: 1.2em;font-weight: bold;margin: 1em 0px;\">Not Found</p>\n<p>The server has not found anything matching the request URI</p>\n<p>You can get technical details <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.5\">here</a>.<br>\nPlease continue your visit at our <a href=\"/\">home page</a>.\n</p>\n</body>\n</html>\n\n\n","statusTrace":"  File \"D:\\Automation\\test_automation_final_project\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"D:\\Automation\\test_automation_final_project\\.venv\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"D:\\Automation\\test_automation_final_project\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Automation\\test_automation_final_project\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Automation\\test_automation_final_project\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"D:\\Automation\\test_automation_final_project\\test_cases\\conftest.py\", line 75, in init_desktop_driver\n    edriver = get_desktop_driver()\n              ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Automation\\test_automation_final_project\\test_cases\\conftest.py\", line 135, in get_desktop_driver\n    driver = appium.webdriver.Remote(get_data('WinAppDriver_Service'), dc)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Automation\\test_automation_final_project\\.venv\\Lib\\site-packages\\appium\\webdriver\\webdriver.py\", line 267, in __init__\n    super().__init__(\n  File \"D:\\Automation\\test_automation_final_project\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 157, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"D:\\Automation\\test_automation_final_project\\.venv\\Lib\\site-packages\\appium\\webdriver\\webdriver.py\", line 357, in start_session\n    response = self.execute(RemoteCommand.NEW_SESSION, parameters)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Automation\\test_automation_final_project\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\Automation\\test_automation_final_project\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 208, in check_response\n    raise exception_class(value)\n","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('init_desktop_driver')"},{"name":"parentSuite","value":"test_cases"},{"name":"suite","value":"test_desktop"},{"name":"subSuite","value":"Test_Desktop"},{"name":"host","value":"DESKTOP-RI1UEJJ"},{"name":"thread","value":"12340-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_desktop"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('init_desktop_driver')"]},"source":"2b4c52e6983676c9.json","parameterValues":[]}